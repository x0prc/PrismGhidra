/* ###
 * IP: GHIDRA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Builds a Ghidra Extension for a given Ghidra installation.
//
// An absolute path to the Ghidra installation directory must be supplied either by setting the 
// GHIDRA_INSTALL_DIR environment variable or Gradle project property:
//
//     > export GHIDRA_INSTALL_DIR=<Absolute path to Ghidra> 
//     > gradle
//
//         or
//
//     > gradle -PGHIDRA_INSTALL_DIR=<Absolute path to Ghidra>
//
// Gradle should be invoked from the directory of the project to build.  Please see the
// application.gradle.version property in <GHIDRA_INSTALL_DIR>/Ghidra/application.properties
// for the correction version of Gradle to use for the Ghidra installation you specify.

//----------------------START "DO NOT MODIFY" SECTION------------------------------
def ghidraInstallDir

if (System.env.GHIDRA_INSTALL_DIR) {
	ghidraInstallDir = System.env.GHIDRA_INSTALL_DIR
}
else if (project.hasProperty("GHIDRA_INSTALL_DIR")) {
	ghidraInstallDir = project.getProperty("GHIDRA_INSTALL_DIR")
}
else {
	ghidraInstallDir = "<REPLACE>"
}

task distributeExtension {
	group "Ghidra"

	apply from: new File(ghidraInstallDir).getCanonicalPath() + "/support/buildExtension.gradle"
	dependsOn ':buildExtension'
}
//----------------------END "DO NOT MODIFY" SECTION-------------------------------
repositories {
    mavenCentral()
    flatDir {
        dirs "${GHIDRA_INSTALL_DIR}/Ghidra/Features/Base/lib"
    }
}

configurations {
    ghidra
}

dependencies {
    compileOnly "generic:ghidra_${GHIDRA_VERSION}_PUBLIC"
    
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.jgrapht:jgrapht-core:1.5.1'
    
    ghidra "org.python:jython-standalone:2.7.2"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

ghidraExtension {
    displayName = "PrismGhidra"
    category = "Debugging Tools"
    description = "Enhanced debugger integration and analysis suite"
    author = "x0prc"
    version = "1.0"
    
    excludeModuleDependencies = false
    zipBaseName = "AdvancedDebuggingPlugins"
    zipDestinationDir = file("build/dist")
}

task buildExtension(type: Copy) {
    group 'Ghidra'
    description 'Builds the Ghidra extension zip file'
    
    from configurations.runtimeClasspath
    from jar.archiveFile
    into zipDestinationDir
    
    dependsOn jar
}

task installExtension(type: Copy) {
    group 'Ghidra'
    description 'Installs the extension into Ghidra'
    
    from buildExtension.outputs
    into "${GHIDRA_INSTALL_DIR}/Extensions"
    
    dependsOn buildExtension
}

eclipse {
    classpath {
        file {
            whenMerged { cp ->
                cp.entries.removeAll { entry ->
                    entry.kind == 'src' && entry.path.startsWith('src/test')
                }
                cp.entries.add(new org.gradle.plugins.ide.eclipse.model.SourceFolder('src/main/resources', null))
            }
        }
    }
}

task initConfig {
    doLast {
        def propsFile = file("gradle.properties")
        if (!propsFile.exists()) {
            propsFile.text = """# Ghidra Development Configuration
GHIDRA_INSTALL_DIR=/path/to/ghidra_${GHIDRA_VERSION}_PUBLIC
"""
        }
    }
}
